/*‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
 üåÄ  MACRO: RECALL SOBRE RUNA SUELTA
 üìÖ  Versi√≥n : 1.3 ¬∑ 23-May-2025
 ‚úçÔ∏è  Autor   : Voorhees
 üó∫Ô∏è  Servidor: √öltima Alianza
 üíª  Cliente : ClassicUO Web

 ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê üìñ  INSTRUCCIONES  üìñ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
 ‚Ä¢ La macro detecta cualquier runa suelta en tu backpack, sin importar su
   orientaci√≥n (graphics 0x1F14, 0x1F15, 0x1F16, 0x1F17), lanza Recall y
   muestra una cuenta atr√°s de 7 ‚Üí 0 s s√≥lo visible para ti.
 ‚Ä¢ Todos los par√°metros se encuentran en CONFIG.
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*/

/*‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚öôÔ∏è  CONFIGURACI√ìN  ‚öôÔ∏è ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
   runeGraphics : Lista de gr√°ficos v√°lidos de runas marcadas
   spell        : Hechizo que se lanzar√°
   targetDelay  : Tiempo m√°x. (ms) para que aparezca el cursor
   recallCast   : Segundos estimados entre el cast y el teleport
‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ*/
const CFG = {
  runeGraphics : [0x1F14, 0x1F15, 0x1F16, 0x1F17], // üì¶ Runas NSEW
  spell        : Spells.Recall,                    // ‚ú® Hechizo principal
  targetDelay  : 8000,                             // ‚è≥ Cursor m√°x. 8 s
  recallCast   : 7                                 // üî¢ Cuenta atr√°s
};

/*‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê üõ†Ô∏è  UTILIDADES  üõ†Ô∏è ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê*/
const log  = (m:string,h=66)=>client.sysMsg(m,h);

/** Devuelve la primera runa encontrada de cualquier orientaci√≥n. */
function findRune(): Item | undefined {
  for (const g of CFG.runeGraphics) {
    const r = client.findType(g, undefined, player.backpack) as Item;
    if (r) return r;
  }
}

/** Cuenta atr√°s sincronizada con el Journal (termina antes si teleporta). */
function countdown(sec:number){
  for(let s=sec;s>=0;s--){
    log(`‚è≥ Teleporte en ${s}s`,66);
    if(journal.waitForText('You have been teleported','System',1000)) return;
  }
}

/*‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê üöÄ  EJECUCI√ìN  üöÄ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê*/
(()=>{
  const rune = findRune();
  if(!rune){log('‚ùå No hay runas en la mochila.',33);return;}

  log('‚åõ Lanzando Recall‚Ä¶',66);
  client.castSpell(CFG.spell);
  if(!target.wait(CFG.targetDelay)){
    log('‚ö†Ô∏è  No se abri√≥ el cursor.',33);return;
  }
  target.entity(rune);

  countdown(CFG.recallCast);
  log('‚úÖ Macro finalizada.',65);
})();
