/*──────────────────────────────────────────────────────────────────────────────
 🌀  MACRO: POCIÓN DE INVISIBILIDAD + RECALL SOBRE RUNA
 📅  Versión : 1.4 · 23-May-2025
 ✍️  Autor   : Voorhees
 🗺️  Servidor: Última Alianza
 💻  Cliente : ClassicUO Web

 ═══════════════════════ 📖  INSTRUCCIONES  📖 ═══════════════════════
     1) Bebe la poción (.invisibilidad).
     2) Busca la primera runa suelta en la mochila (graphics 0x1F14-17).
     3) Lanza Recall, apunta la runa y muestra cuenta atrás 7 → 0 s.
 • Todos los parámetros editables están en CONFIG.
──────────────────────────────────────────────────────────────────────────────*/

/*════════════ ⚙️  CONFIGURACIÓN  ⚙️ ════════════*/
const CFG = {
  runeGraphics : [0x1F14, 0x1F15, 0x1F16, 0x1F17], // 📦 Runas NSEW
  spell        : Spells.Recall,                    // ✨ Hechizo principal
  invisCmd     : '.invisibilidad',                 // 🧪 Comando poción
  invisDelay   : 0,                                // 💤 Pausa tras la poción (ms)
  targetDelay  : 600,                              // ⏳ Tiempo máx. cursor
  recallCast   : 7                                 // 🔢 Segundos de cuenta atrás
};

/*════════════ 🛠️  UTILIDADES  🛠️ ═════════════*/
const log = (m: string, h = 66) => client.sysMsg(m, h);

/** Encuentra la primera runa válida, sin importar orientación. */
function findRune(): Item | undefined {
  for (const g of CFG.runeGraphics) {
    const r = client.findType(g, undefined, player.backpack) as Item;
    if (r) return r;
  }
}

/** Cuenta atrás; se corta si detecta el teleport en el Journal. */
function countdown(sec: number) {
  for (let s = sec; s >= 0; s--) {
    log(`⏳ Teleporte en ${s}s`, 66);
    if (journal.waitForText('You have been teleported', 'System', 1000)) return;
  }
}

/*════════════ 🚀  EJECUCIÓN  🚀 ══════════════*/
(() => {
  /* Paso 1 · Invisibilidad */
  log('🧪 Bebiendo poción de invisibilidad…', 66);
  player.say(CFG.invisCmd);
  sleep(CFG.invisDelay);                    // breve pausa fija

  /* Paso 2 · Buscar runa */
  const rune = findRune();
  if (!rune) { log('❌ No hay runas en la mochila.', 33); return; }

  /* Paso 3 · Recall */
  log('⌛ Lanzando Recall…', 66);
  client.castSpell(CFG.spell);
  if (!target.wait(CFG.targetDelay)) {
    log('⚠️  No se abrió el cursor.', 33);
    return;
  }
  target.entity(rune);

  /* Paso 4 · Cuenta atrás */
  countdown(CFG.recallCast);
  log('✅ ¡Estás a salvo!.', 65);
})();
